version: '3'
services:
  postgres:
    image: postgres:9
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:4.0
  client:
    image: yyachi/medusa_rest_client
    build:
      context: .
    volumes:
      - ./config/.orochirc:/root/.orochirc
      - ./spec:/usr/src/app/spec
      - ./tmp:/usr/src/app/tmp
  app:
    user: 1001:1001
    image: yyachi/medusa:${MEDUSA_VERSION}
    env_file: .env.test
    working_dir: /medusa
    environment:
      - "RAILS_ENV=test"
      - "RAILS_RELATIVE_ROOT=/test"
      - "REDIS_URL=redis://redis:6379"
    command: /bin/sh -c "rm -f tmp/pids/unicorn.pid && bundle exec unicorn_rails -c /medusa/config/unicorn/test.rb -E test"
    volumes:
      - ./config/database.yml:/medusa/config/database.yml
      - ./config/application.yml:/medusa/config/application.yml
      - ./config/environments/production.rb:/medusa/config/environments/production.rb
      - ./config/unicorn:/medusa/config/unicorn
#      - ./config/routes.rb:/medusa/config/routes.rb
      - ./log:/medusa/log
      - ./medusa_tmp:/medusa/tmp
      - ./public/assets:/medusa/public/assets
      - ./public/system:/medusa/public/system
      - ./dot.emacs.d:/medusa/dot.emacs.d
      - ./bibtex:/medusa/bibtex
      - ./scripts:/medusa/scripts
    ports:
      - "3002:3002"
    depends_on:
      - postgres 
volumes:
  postgres_data:
